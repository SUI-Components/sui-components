@import '~@s-ui/theme/lib/index';
@import './buttonSpinnerIcon/index';

$base-class: '.sui-AtomButton';

$c-accent-hover: color-variation($c-accent, -1) !default;
$c-accent-flat-hover: color-variation($c-accent, 4) !default;
$c-primary-hover: color-variation($c-primary, -1) !default;
$c-primary-flat-hover: color-variation($c-primary, 4) !default;

$c-atom-button-colors: (
  'primary': (
    $c-primary,
    $c-white,
    $c-primary-hover,
    $c-primary-flat-hover
  ),
  'accent': (
    $c-accent,
    $c-white,
    $c-accent-hover,
    $c-accent-flat-hover
  ),
  'neutral': (
    $c-gray,
    $c-white
  ),
  'success': (
    $c-success,
    $c-white
  ),
  'alert': (
    $c-alert,
    $c-white
  ),
  'error': (
    $c-error,
    $c-white
  ),
  'social-facebook': (
    $c-facebook,
    $c-white
  ),
  'social-twitter': (
    $c-twitter,
    $c-white
  ),
  'social-google': (
    $c-google,
    $c-white
  ),
  'social-youtube': (
    $c-youtube,
    $c-white
  ),
  'social-whatsapp': (
    $c-whatsapp,
    $c-white
  ),
  'social-instagram': (
    $c-instagram,
    $c-white
  )
) !default;

$ff-atom-button: $ff-sans-serif !default;

$bdrs-atom-button: $bdrs-m !default;
$bgc-atom-button: $c-primary !default;
$bgc-atom-button-light: color-variation($bgc-atom-button, 4) !default;
$bgc-atom-button-dark: color-variation($bgc-atom-button, -1) !default;
$bgc-atom-button-light-contrast: color-variation($bgc-atom-button, 3) !default;

$sz-atom-button-small: $p-base * 4 !default;
$fz-atom-button-small: $fz-s !default;
$fw-atom-button-small: $fw-semi-bold !default;
$icon-sz-atom-button-small: $sz-icon-s !default;
$icon-m-atom-button-small: $m-s !default;
$p-atom-button-small: $p-m !default;

$sz-atom-button: $p-base * 5 !default;
$fz-atom-button: $fz-m !default;
$fw-atom-button: $fw-semi-bold !default;
$icon-sz-atom-button: $sz-icon-s !default;
$icon-m-atom-button: $m-m !default;
$p-atom-button: $p-l !default;

$bdrs-atom-button-large: $bdrs-m !default;
$sz-atom-button-large: $p-base * 6 !default;
$fz-atom-button-large: $fz-m !default;
$fw-atom-button-large: $fw-semi-bold !default;
$icon-sz-atom-button-large: $sz-icon-m !default;
$icon-m-atom-button-large: $m-m !default;
$p-atom-button-large: $p-l !default;
$m-consecutive-atom-button: $m-m !default;

$bdrs-atom-button-group-selected: none !default;
$bxsh-atom-button-group-selected: none !default;
$bd-atom-button-group-focused: 1px solid !default;
$bdrs-atom-button-first: $bdrs-m 0 0 $bdrs-m !default;
$bdrs-atom-button-last: 0 $bdrs-m $bdrs-m 0 !default;
$p-atom-button-group-sides: $p-l !default;

$bxsh-atom-button-solid-primary: none !default;
$bxsh-atom-button-solid-primary-negative: none !default;

$tt-atom-button: none !default;

$icon-fill-color: currentColor !default;
$icon-stroke-color: currentColor !default;

$td-atom-button-link: none !default;

// Sets active states when button is not disabled
@mixin button-focused {
  &#{$base-class}--focused,
  &:active {
    @content;
  }
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

@mixin button-icon($size, $margin) {
  & #{$base-class}-leftIcon,
  & #{$base-class}-rightIcon,
  & #{$base-class}-centerIcon {
    &,
    & [class*='Icon'] {
      height: $size;
      width: $size;
    }
  }

  & #{$base-class}-leftIcon {
    margin-right: $margin;
  }

  & #{$base-class}-rightIcon {
    margin-left: $margin;
  }
}

@mixin button-circular($size) {
  border-radius: #{$size * 0.5};
}

#{$base-class} {
  @include reset-button;
  @include button-icon($icon-sz-atom-button, $icon-m-atom-button);

  border-radius: $bdrs-atom-button;
  border: $bdw-s solid;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  font: {
    family: $ff-atom-button;
    size: $fz-atom-button;
    weight: $fw-atom-button;
  }
  height: $sz-atom-button;
  line-height: normal;
  min-width: $sz-atom-button;
  outline: 0;
  padding: 0 $p-atom-button;
  text-decoration: none;
  text-transform: $tt-atom-button;
  white-space: nowrap;

  & + &:not(&--fitted):not(&-group) {
    margin-left: $m-consecutive-atom-button;
  }

  &-group {
    margin-left: -1px;
    margin-right: 0;
    padding: 0 $p-atom-button-group-sides;

    & + & {
      margin-left: -1px;
      margin-right: 0;
    }

    &--middle {
      &#{$base-class} {
        border-radius: 0;
      }
    }

    &--first {
      &#{$base-class} {
        border-radius: $bdrs-atom-button-first;
      }
    }

    &--last {
      &#{$base-class} {
        border-radius: $bdrs-atom-button-last;
      }
    }

    &--selected {
      &#{$base-class} {
        border-radius: $bdrs-atom-button-group-selected;
        box-shadow: $bxsh-atom-button-group-selected;
      }
    }

    &--focused {
      border: $bd-atom-button-group-focused;
    }
  }

  &-inner {
    align-items: center;
    display: inline-flex;
    height: 100%;
    pointer-events: none;
  }

  &--loading {
    #{$base-class}-inner {
      justify-content: center;
    }

    #{$base-class}-text {
      opacity: 0;
    }
  }

  // Icons
  &-leftIcon,
  &-rightIcon,
  &-centerIcon {
    display: inline-flex;

    // add compatibility with SuiAtomIcon with correct alignment
    .sui-AtomIcon {
      display: inline-flex;
    }

    svg {
      fill: $icon-fill-color;
      stroke: $icon-stroke-color;
    }
  }

  &-centerIcon {
    align-items: center;
    justify-content: center;
    position: absolute;
  }

  &#{$base-class}--link:not(#{$base-class}--solid):not(#{$base-class}--outline):not(#{$base-class}--flat) {
    background: transparent;

    border: none;
    @include link();
    padding: 0;
    justify-content: center;
    text-align: center;
    text-decoration: $td-atom-button-link;
    @include button-focused {
      background: transparent;
    }

    &#{$base-class}--negative {
      background: transparent;
      @include button-focused {
        background: transparent;
      }
    }
  }

  // Types, colors and align text
  @each $name, $pair in $c-atom-button-colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &--#{$name} {
      &#{$base-class}--solid {
        background: $color;
        border-color: $color;
        color: $color-invert;
        text-decoration-line: none;

        @include button-focused {
          background: if(
            length($pair) > 2,
            nth($pair, 3),
            color-variation($color, -1)
          );

          border-color: if(
            length($pair) > 2,
            nth($pair, 3),
            color-variation($color, -1)
          );
        }

        &#{$base-class}--negative {
          background: $color-invert;
          border-color: $color-invert;
          color: $color;

          @include button-focused {
            background: color-variation($color, 4);
            border-color: color-variation($color, 4);
          }
        }
      }

      &#{$base-class}--outline,
      &#{$base-class}--flat {
        $bgc-atom-button-focused: color-variation($color, 4) !default;
        $bgc-atom-button-focused-invert: color-variation($color, -1) !default;
        $c-atom-button-focused: $color !default;
        $c-atom-button-focused-invert: $color-invert !default;

        border-color: $color;
        color: $color;
        text-decoration-line: none;

        @include button-focused {
          background: if(
            length($pair) > 2,
            nth($pair, 4),
            $bgc-atom-button-focused
          );

          @if ($color != $c-atom-button-focused) {
            color: $c-atom-button-focused;
          }
        }

        &#{$base-class}--negative {
          border-color: $color-invert;
          color: $color-invert;

          @include button-focused {
            background: $bgc-atom-button-focused-invert;
            @if ($color-invert != $c-atom-button-focused-invert) {
              color: $c-atom-button-focused-invert;
            }
          }
        }
      }
      &#{$base-class}--link:not(#{$base-class}--solid):not(#{$base-class}--outline):not(#{$base-class}--flat) {
        $c-atom-button-focused: color-variation($color, -1) !default;
        $c-atom-button-link-focused: $c-atom-button-focused !default;
        $c-atom-button-focused-invert: color-variation(
          $color-invert,
          -1
        ) !default;

        color: $color;
        @include button-focused {
          color: $c-atom-button-link-focused;
        }

        &#{$base-class}--negative {
          color: $color-invert;

          @include button-focused {
            color: $c-atom-button-focused-invert;
          }
        }
      }
    }
  }

  &--outline,
  &--negative {
    background: none;
  }

  &--flat {
    border: 0;
  }

  &--solid {
    &#{$base-class}--primary {
      box-shadow: $bxsh-atom-button-solid-primary;

      &#{$base-class}--negative {
        box-shadow: $bxsh-atom-button-solid-primary-negative;
      }
    }
  }

  &--squared {
    border-radius: 0;
  }

  &--circular {
    @include button-circular($sz-atom-button);
  }

  &--center {
    text-align: center;
  }

  &--left {
    text-align: left;
  }

  &--right {
    text-align: right;
  }

  // Modifiers
  &--disabled {
    cursor: default;
    opacity: 0.3;
    pointer-events: none;
  }

  &--small {
    @include button-icon($icon-sz-atom-button-small, $icon-m-atom-button-small);
    font-size: $fz-atom-button-small;
    font-weight: $fw-atom-button-small;
    height: $sz-atom-button-small;
    min-width: $sz-atom-button-small;
    padding: 0 $p-atom-button-small;

    &#{$base-class}--squared {
      border-radius: 0;
    }

    &#{$base-class}--circular {
      @include button-circular($sz-atom-button-small);
    }
  }

  &--large {
    @include button-icon($icon-sz-atom-button-large, $icon-m-atom-button-large);
    border-radius: $bdrs-atom-button-large;
    font-size: $fz-atom-button-large;
    font-weight: $fw-atom-button-large;
    height: $sz-atom-button-large;
    min-width: $sz-atom-button-large;
    padding: 0 $p-atom-button-large;

    &#{$base-class}--squared {
      border-radius: 0;
    }

    &#{$base-class}--circular {
      @include button-circular($sz-atom-button-large);
    }
  }

  &--fullWidth {
    justify-content: center;
    width: 100%;
  }

  &--empty {
    padding: 0;
    #{$base-class}-leftIcon,
    #{$base-class}-rightIcon {
      margin: 0;
    }
  }
}
