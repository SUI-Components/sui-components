$base-class: '.sui-AtomTag';

#{$base-class} {
  $self: &;
  border-radius: ceil($h-atom-tag-m * 0.5);
  height: $h-atom-tag-m;
  padding: $p-atom-tag-m;
  border: $bd-atom-tag;
  align-items: center;
  align-content: center;
  background-color: $bgc-atom-tag;
  box-sizing: border-box;
  cursor: default;
  display: inline-flex;
  font-size: $fz-s;
  justify-content: center;
  margin: 0 $m-atom-tag $m-atom-tag 0;
  position: relative;
  white-space: nowrap;

  &--isFitted {
    margin: 0;
  }

  * ~ #{$base-class}-label {
    margin: 0 0 0 $m-s;
  }

  #{$base-class}-label + * {
    margin: 0 0 0 $m-s;
  }

  #{$base-class}-label {
    // max width - 2 icon size
    $w-label-base: $mw-label - ($p-l * 2);
    display: inline-block;
    line-height: $h-atom-tag-m;
    max-width: $w-label-base;
    overflow: hidden;
    text-overflow: ellipsis;
    vertical-align: middle;
    white-space: nowrap;

    // if only one icon is set
    .sui-AtomTag-hasIcon &,
    .sui-AtomTag-hasClose & {
      max-width: $w-label-base - ($p-l + $m-s);
    }

    // if both icons are set
    .sui-AtomTag-hasIcon.sui-AtomTag-hasClose & {
      max-width: $w-label-base - ($p-l + $m-s) * 2;
    }
  }

  &-closeable {
    @include icon-secondary-clickable-area($h-atom-tag-m);

    &Icon {
      cursor: pointer;
      line-height: initial;
      position: relative;
      border-radius: $bdrs-rounded;
      background-color: $bgc-atom-tag-closable-icon;
      fill: $c-atom-tag-closable-icon;
      color: $c-atom-tag-closable-icon;

      &:hover {
        background-color: $bgc-atom-tag-closable-icon--hover;
        fill: $c-atom-tag-closable-icon--hover;
        color: $c-atom-tag-closable-icon--hover;
      }
    }
  }

  &-icon {
    @include icon-atom-tag(icon);
    margin-left: 0;
  }

  &-secondary-icon {
    @include icon-atom-tag(icon-secondary);
    margin-right: 0;
  }
  &-actionable {
    background-color: $bgc-atom-tag-actionable;
    border: $bd-atom-tag-actionable;
    color: $c-atom-tag-actionable;
    cursor: pointer;
    fill: $c-atom-tag-actionable;
    text-decoration: none;
    -webkit-tap-highlight-color: $thc-atom-tag-actionable;

    &[aria-disabled='true'] {
      cursor: default;
      opacity: 0.3;
    }

    &:not([aria-disabled='true']) {
      &:hover {
        @media (hover: hover) and (pointer: fine) {
          background-color: $bgc-atom-tag-actionable--hover;
          color: $c-atom-tag-actionable;
          cursor: pointer;
          fill: $c-atom-tag-actionable;
        }
      }
      &:active {
        background-color: $bgc-atom-tag-actionable--hover;
        color: $c-atom-tag-actionable;
        cursor: pointer;
        fill: $c-atom-tag-actionable;
      }
    }

    &#{$self}--design-outline {
      border-color: $c-atom-tag-actionable-invert;
      color: $c-atom-tag-actionable-invert;
      fill: $c-atom-tag-actionable-invert;

      &:not([aria-disabled='true']) {
        &:hover {
          @media (hover: hover) and (pointer: fine) {
            background-color: $bgc-atom-tag-actionable-invert--hover;
            color: $c-atom-tag-actionable-invert--hover;
            fill: $c-atom-tag-actionable-invert--hover;
          }
        }
        &:active {
          background-color: $bgc-atom-tag-actionable-invert--hover;
          color: $c-atom-tag-actionable-invert--hover;
          fill: $c-atom-tag-actionable-invert--hover;
        }
      }
    }
  }

  &--size {
    &-small {
      border-radius: ceil($h-atom-tag-s * 0.5);
      height: $h-atom-tag-s;
      padding: $p-atom-tag-s;
      &.sui-AtomTag-hasIcon.sui-AtomTag-hasClose {
        padding: map-get($p-atom-tag-hasIcon-hasClose, 'small');
      }

      & .sui-AtomTag-label {
        line-height: $h-atom-tag-s;
      }

      .sui-AtomTag-closeable {
        @include icon-secondary-clickable-area($h-atom-tag-s);
      }
    }

    &-medium {
      height: $h-atom-tag-m;
      padding: $p-atom-tag-m;
      border-radius: ceil($h-atom-tag-m * 0.5);
      &.sui-AtomTag-hasIcon.sui-AtomTag-hasClose {
        padding: map-get($p-atom-tag-hasIcon-hasClose, 'medium');
      }

      & .sui-AtomTag-label {
        line-height: $h-atom-tag-m;
      }

      .sui-AtomTag-closeable {
        @include icon-secondary-clickable-area($h-atom-tag-m);
      }
    }

    &-large {
      border-radius: ceil($h-atom-tag-l * 0.5);
      height: $h-atom-tag-l;
      padding: $p-atom-tag-l;
      &.sui-AtomTag-hasIcon.sui-AtomTag-hasClose {
        padding: map-get($p-atom-tag-hasIcon-hasClose, 'large');
      }

      & .sui-AtomTag-label {
        line-height: $h-atom-tag-l;
      }

      .sui-AtomTag-closeable {
        @include icon-secondary-clickable-area($h-atom-tag-l);
      }
    }
  }

  &--responsive {
    border-radius: ceil($h-atom-tag-l * 0.5);
    height: $h-atom-tag-l;
    padding: $p-atom-tag-l;
    & .sui-AtomTag-label {
      line-height: $h-atom-tag-l;
    }
    .sui-AtomTag-closeable {
      @include icon-secondary-clickable-area($h-atom-tag-l);
    }

    @include media-breakpoint-up(s) {
      &#{$self}--size {
        &-small {
          border-radius: ceil($h-atom-tag-s * 0.5);
          height: $h-atom-tag-s;
          padding: $p-atom-tag-s;
          &.sui-AtomTag-hasIcon.sui-AtomTag-hasClose {
            padding: map-get($p-atom-tag-hasIcon-hasClose, 'small');
          }

          & .sui-AtomTag-label {
            line-height: $h-atom-tag-s;
          }

          .sui-AtomTag-closeable {
            @include icon-secondary-clickable-area($h-atom-tag-s);
          }
        }
        &-medium {
          height: $h-atom-tag-m;
          padding: $p-atom-tag-m;
          &.sui-AtomTag-hasIcon.sui-AtomTag-hasClose {
            padding: map-get($p-atom-tag-hasIcon-hasClose, 'medium');
          }

          & .sui-AtomTag-label {
            line-height: $h-atom-tag-m;
          }

          .sui-AtomTag-closeable {
            @include icon-secondary-clickable-area($h-atom-tag-m);
          }
        }
      }
    }
  }

  &--design-outline {
    background-color: $bgc-atom-tag-outline;
    border: $bdw-atom-tag-outline solid $bc-atom-tag-outline;
  }

  @each $name, $type in $atom-tag-types {
    $bgc: map-get($type, bgc);
    $c: map-get($type, c);
    $bgc-hover: map-get($type, bgc-hover);
    $c-hover: map-get($type, c-hover);
    $bdc: map-get($type, bdc);
    $bds: map-get($type, bds);
    $bdw: map-get($type, bdw);
    $bdc-hover: map-get($type, bdc-hover);
    $c-icon-close: map-get($type, c-icon-close);
    $c-icon-close-hover: map-get($type, c-icon-close-hover);
    $bgc-icon-close-hover: map-get($type, bgc-icon-close-hover);

    &--#{$name} {
      background-color: $bgc;
      border-color: $bdc;
      border-style: $bds;
      border-width: $bdw;
      color: $c;
      fill: $c;

      &#{$self}-actionable {
        background-color: $bgc;
        border-color: $bdc;
        color: $c;
        fill: $c;
      }

      &#{$self}--outline {
        border-color: $bgc;
        color: $bgc;
        background-color: $c;
        fill: $bgc;
      }

      & > #{$self}-closeable {
        color: $c-icon-close;
      }

      #{$self}-closeable > #{$self}-closeableIcon {
        color: $c-icon-close;
        &:hover {
          color: $c-icon-close-hover;
          background-color: $bgc-icon-close-hover;
        }
      }

      @if $bgc-hover or $c-hover {
        &:not([aria-disabled='true']) {
          &:hover {
            @media (hover: hover) and (pointer: fine) {
              background-color: $bgc-hover;
              border-color: $bdc-hover;
              color: $c-hover;
              &#{$self}--outline {
                background-color: $bgc;
                border-color: $bgc;
                color: $c;
                fill: $c;
              }
            }
          }

          &:active {
            background-color: $bgc-hover;
            border-color: $bdc-hover;
            color: $c-hover;
            &#{$self}--outline {
              background-color: $bgc;
              border-color: $bgc;
              color: $c;
              fill: $c;
            }
          }
        }
      }
    }
  }

  @media print {
    border: {
      color: $bgc-atom-tag;
      style: solid;
      width: $bdrs-s;
    }
  }
}
