$base-class: '.sui-AtomInput';
$base-class-tag: '.sui-AtomTag';
$class-tags: '#{$base-class}--withTags';
$class-input: '#{$base-class}-input';

#{$class-tags} {
  @include sui-atom-input-input;
  border: none;
  border-radius: $bdrs-molecule-input-tags;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  gap: $sz-base;
  padding: 0 $p-m;
  $this: &;

  &[aria-disabled='true'] {
    background-color: $bg-input-tag-disable;
    & #{$class-input}:disabled {
      border: 0;
      background-color: transparent;
    }
  }

  #{$base-class-tag}_Container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    align-content: center;

    &-size {
      @each $size, $value in $sizes-atom-input {
        &-#{$size} {
          height: $value;
          min-height: $value;
        }
      }
    }
  }

  & #{$base-class} {
    &_Container {
      width: auto;
    }
  }

  & #{$class-input} {
    padding: 0;
  }

  @each $type, $attr in $sizes-atom-input {
    &-#{$type} {
      height: 100%;
      min-height: $attr;

      #{$class-input} {
        min-height: calc(#{$attr} - #{$p-m} * 2 - 2px);
      }
    }
  }

  @each $type, $attr in $sizes-atom-input-paddings {
    &-#{$type} {
      #{$class-tags}-container {
        padding: $attr 0 $attr $attr;
      }
    }
  }
  &#{$this}--isBorderless {
    border: none;
  }
  &:not(#{$this}--isBorderless) {
    border: $bd-atom-input-base;
    &#{$this}--focus {
      @include sui-atom-input-input-focus;
    }
    @each $state, $color in $states-atom-input {
      &#{$this}--#{$state} {
        border-color: $color;
      }
    }
    &#{$this}:focus-within:has(#{$class-input}:focus-visible) {
      outline-style: solid;
      outline-color: transparentize($c-primary, 0.2);
      outline-width: 2px;
      outline-offset: 2px;
    }
  }
}
